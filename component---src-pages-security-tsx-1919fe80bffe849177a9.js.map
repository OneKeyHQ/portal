{"version":3,"file":"component---src-pages-security-tsx-1919fe80bffe849177a9.js","mappings":"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","sources":["webpack://portal/./src/components/pages/Security/FeatureSection/ImageSwitcher/ImageSwitcher.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/TextBlock.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/useFeatureSectionData.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/DesktopLayout/Progress.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/DesktopLayout/DesktopLayout.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/MobileLayout/MobileLayout.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/TabletLayout/TabletLayout.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/Title.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/FeatureSection.tsx","webpack://portal/./src/components/pages/Security/Hero/Hero.tsx","webpack://portal/./src/components/pages/Security/TextDescriptionSection/TextDescriptionSection.tsx","webpack://portal/./src/components/pages/Security/TextDescriptionSection/useTextDescriptionSectionData.ts","webpack://portal/./src/components/pages/Security/Security.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react';\n\nimport { Box } from '../../../../base';\nimport { FeatureSectionDataItem } from '../useFeatureSectionData';\n\nexport interface ImageSwitcherProps {\n  children?: ReactNode;\n  featureSectionDataItems: FeatureSectionDataItem[];\n  active: number;\n}\n\nexport const ImageSwitcher: FC<ImageSwitcherProps> = (props) => {\n  const { featureSectionDataItems, active = 0, children } = props;\n\n  return (\n    <Box xs={{ position: 'relative', maxWidth: 1064 }}>\n      {featureSectionDataItems.map((item, index) => (\n        <Box\n          key={item.name}\n          xs={{\n            opacity: index <= active ? 1 : 0,\n            willChange: 'opacity',\n            transition: 'opacity 0.5s ease',\n            top: 0,\n            position: index === 0 ? 'relative' : 'absolute',\n          }}\n        >\n          {item.imageNode}\n        </Box>\n      ))}\n      {children}\n    </Box>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { Box, Button, Flex, Link, P, Span } from '../../../base';\n\nimport { FeatureSectionDataItem } from './useFeatureSectionData';\n\nexport interface TextBlockProps extends FeatureSectionDataItem {\n  children?: ReactNode;\n}\n\nexport const TextBlock: FC<TextBlockProps> = (props) => {\n  const { children, name, description, button } = props;\n  const theme = useTheme();\n\n  return (\n    <Flex xs={{ gap: 16, flexDirection: 'column' }}>\n      <Span\n        xs={theme.text.medium600}\n        l={theme.text.medium700}\n        xl={theme.text.medium800}\n      >\n        {name}\n      </Span>\n\n      {description.map((item) => (\n        <P xs={theme.text.normal200} l={theme.text.normal300} key={item}>\n          {item}\n        </P>\n      ))}\n\n      {button && (\n        <Box xs={{ width: 'fit-content' }}>\n          <Link to={button.link}>\n            <Button themeColor=\"dark\" variant={button.variant}>\n              {button.text}\n            </Button>\n          </Link>\n        </Box>\n      )}\n\n      {children}\n    </Flex>\n  );\n};\n","import { ReactNode } from 'react';\n\nimport { StaticImage } from 'gatsby-plugin-image';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\n\nimport { ButtonProps } from '../../../base';\n\nexport type FeatureSectionData = {\n  subtitle: string;\n  title: string;\n  description: string;\n  items: FeatureSectionDataItem[];\n};\n\nexport type FeatureSectionDataItem = {\n  description: string[];\n  name: string;\n  imageNode: ReactNode;\n  button?: {\n    text: string;\n    link: string;\n    variant: ButtonProps['variant'];\n  };\n};\n\nexport function useFeatureSectionData(): FeatureSectionData {\n  const { t } = useTranslation();\n\n  return {\n    subtitle: t('title__professional_choice'),\n    title: t('title__what_makes_onekey_earn_the_trust_of_top_pro_institutions'),\n    description: t(\n      'title__what_makes_onekey_earn_the_trust_of_top_pro_institutions_desc',\n    ),\n    items: [\n      {\n        name: t('title__open_source'),\n        description: [\n          t('title__open_source_desc_1'),\n          t('title__open_source_desc_2'),\n        ],\n        imageNode: (\n          <StaticImage\n            src=\"./images/security-01.jpg\"\n            alt={t('title__open_source')}\n          />\n        ),\n        button: {\n          text: t('action__learn_more'),\n          link: 'https://github.com/OneKeyHQ/',\n          variant: 'outlined',\n        },\n      },\n      {\n        name: t('title__secure_element'),\n        description: [\n          t('title__secure_element_desc_1'),\n          t('title__secure_element_desc_2'),\n          t('title__secure_element_desc_3'),\n        ],\n        imageNode: (\n          <StaticImage\n            src=\"./images/security-02.jpg\"\n            alt={t('title__secure_element')}\n          />\n        ),\n      },\n      {\n        name: t('title__cold_keys'),\n        description: [\n          t('title__cold_keys_desc_1'),\n          t('title__cold_keys_desc_2'),\n          t('title__cold_keys_desc_3'),\n        ],\n        imageNode: (\n          <StaticImage\n            src=\"./images/security-03.jpg\"\n            alt={t('title__cold_keys')}\n          />\n        ),\n      },\n    ],\n  };\n}\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { Box } from '../../../../base';\n\nexport interface ProgressProps {\n  children?: ReactNode;\n}\n\nexport const Progress: FC<ProgressProps> = (props) => {\n  const { children } = props;\n  const theme = useTheme();\n\n  return (\n    <Box\n      xs={{\n        width: 1,\n        height: '100%',\n        backgroundColor: 'rgba(255, 255, 255, 0.16)',\n      }}\n    >\n      <Box\n        xs={{\n          width: '100%',\n          height: 320,\n          position: 'sticky',\n          background: theme.colors.white,\n          top: `calc(50% - ${320}px)`,\n        }}\n        xl={{ height: 280 }}\n        xxl={{ height: 250 }}\n      />\n      {children}\n    </Box>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTransform } from 'framer-motion';\n\nimport {\n  useElementInViewportProgress,\n  useWindowSize,\n} from '../../../../../hooks';\nimport { Box, Container, Flex } from '../../../../base';\nimport { ImageSwitcher } from '../ImageSwitcher';\nimport { TextBlock } from '../TextBlock';\nimport { useFeatureSectionData } from '../useFeatureSectionData';\n\nimport { Progress } from './Progress';\n\nexport interface DesktopLayoutProps {\n  children?: ReactNode;\n}\n\nexport const DesktopLayout: FC<DesktopLayoutProps> = (props) => {\n  const { children } = props;\n  const featureSectionData = useFeatureSectionData();\n  const { height: windowHeight = 0 } = useWindowSize();\n  const { ref, elementInViewportProgress } = useElementInViewportProgress(0);\n  const motionValue = useTransform(\n    elementInViewportProgress,\n    [0.6, 1.5],\n    [0, 2],\n  );\n\n  const currentIndex = useTransform(motionValue, (value) => {\n    const index = parseInt(value.toFixed(0));\n\n    return index;\n  });\n\n  const stickyPosition =\n    windowHeight > 600 ? { top: `calc(50% - ${600 / 2}px)` } : { top: 100 };\n\n  return (\n    <Box>\n      <Container>\n        <Flex xs={{ justifyContent: 'space-between', paddingTop: 80 }}>\n          <Box>\n            <Progress />\n          </Box>\n\n          <Flex\n            xs={{\n              width: 420,\n              flexDirection: 'column',\n              gap: 300,\n            }}\n            xl={{ width: 500 }}\n            xxl={{ width: 600 }}\n          >\n            {featureSectionData.items.map((item, index) => (\n              <Box\n                xs={{\n                  willChange: 'opacity',\n                  transition: 'opacity 0.5s',\n                  opacity: index === currentIndex.get() ? 1 : 0.3,\n                }}\n                key={item.name}\n              >\n                <TextBlock {...item} />\n              </Box>\n            ))}\n          </Flex>\n\n          <Box\n            xs={{\n              width: 600,\n              position: 'relative',\n            }}\n            xl={{ width: 700 }}\n            xxl={{ width: 800 }}\n          >\n            <div ref={ref} />\n\n            <Box\n              css={{\n                ...stickyPosition,\n                position: 'sticky',\n                overflow: 'hidden',\n                padding: '0 64px',\n              }}\n            >\n              <ImageSwitcher\n                active={currentIndex.get()}\n                featureSectionDataItems={featureSectionData.items}\n              />\n            </Box>\n          </Box>\n        </Flex>\n      </Container>\n\n      {children}\n    </Box>\n  );\n};\n","import { FC, ReactNode, useState } from 'react';\n\nimport Swiper from 'swiper';\n\nimport { useBoundingClientRect, useInterval } from '../../../../../hooks';\nimport { theme } from '../../../../../theme';\nimport { Box, Container, SwiperSlide } from '../../../../base';\nimport { FreeSwiper } from '../../../../common';\nimport { ImageSwitcher } from '../ImageSwitcher';\nimport { TextBlock } from '../TextBlock';\nimport { useFeatureSectionData } from '../useFeatureSectionData';\n\nexport interface MobileLayoutProps {\n  children?: ReactNode;\n}\n\nexport const MobileLayout: FC<MobileLayoutProps> = (props) => {\n  const { children } = props;\n\n  const featureSectionData = useFeatureSectionData();\n  const [blockSwiper, setBlockSwiper] = useState<Swiper>();\n  const [progress, setProgress] = useState(0);\n  const progressBarWidth = 100;\n  const { ref, rect } = useBoundingClientRect();\n  const progressContainerWidth = rect?.width ?? 0;\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const updateProgress = () => {\n    if (blockSwiper?.progress) {\n      setCurrentIndex(\n        Math.abs(parseInt((blockSwiper.progress * 2).toFixed(0))),\n      );\n\n      setProgress(blockSwiper?.progress);\n    }\n  };\n\n  useInterval(() => {\n    updateProgress();\n  }, 100);\n\n  return (\n    <Box>\n      <Container>\n        <ImageSwitcher\n          active={currentIndex}\n          featureSectionDataItems={featureSectionData.items}\n        />\n\n        <Box\n          xs={{\n            height: 1,\n            background: 'rgba(255, 255, 255, 0.16)',\n            overflow: 'hidden',\n            position: 'relative',\n          }}\n        >\n          <div css={{ width: '100%' }} ref={ref} />\n          <Box\n            xs={{\n              willChange: 'width',\n              transition: 'width 0.2s linear',\n              width:\n                // fixed width\n                progressBarWidth +\n                // dynamic width\n                (progressContainerWidth - progressBarWidth) * progress,\n              height: 1,\n              background: theme.colors.white,\n            }}\n          />\n        </Box>\n      </Container>\n\n      <Box xs={{ paddingTop: 40 }}>\n        <FreeSwiper\n          onSwiper={setBlockSwiper}\n          spaceBetween={24}\n          style={{\n            paddingLeft: 24,\n            paddingRight: 24,\n          }}\n        >\n          {featureSectionData.items.map((item) => (\n            <SwiperSlide key={item.name} style={{ width: 272 }}>\n              <TextBlock {...item} />\n            </SwiperSlide>\n          ))}\n        </FreeSwiper>\n      </Box>\n\n      {children}\n    </Box>\n  );\n};\n","import { FC, ReactNode, useState } from 'react';\n\nimport { theme } from '../../../../../theme';\nimport { Box, Container, Flex } from '../../../../base';\nimport { ImageSwitcher } from '../ImageSwitcher';\nimport { TextBlock } from '../TextBlock';\nimport { useFeatureSectionData } from '../useFeatureSectionData';\n\nexport interface TabletLayoutProps {\n  children?: ReactNode;\n}\n\nexport const TabletLayout: FC<TabletLayoutProps> = (props) => {\n  const { children } = props;\n\n  const featureSectionData = useFeatureSectionData();\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  return (\n    <Container>\n      <Box xs={{ width: 400, marginLeft: 'auto', marginRight: 'auto' }}>\n        <ImageSwitcher\n          active={currentIndex}\n          featureSectionDataItems={featureSectionData.items}\n        />\n      </Box>\n\n      <Box\n        xs={{\n          height: 1,\n          background: 'rgba(255, 255, 255, 0.16)',\n          overflow: 'hidden',\n          position: 'relative',\n        }}\n      >\n        <Box\n          xs={{\n            willChange: 'width',\n            transition: 'width 0.5s',\n            width: `${((currentIndex + 1) / 3) * 100}%`,\n            height: 1,\n            background: theme.colors.white,\n          }}\n        />\n      </Box>\n\n      <Flex xs={{ paddingTop: 40, gap: theme.size.m.gutter }}>\n        {featureSectionData.items.map((item, index) => (\n          <Box\n            xs={{\n              flex: 1,\n              willChange: 'opacity',\n              transition: 'opacity 0.5s',\n              opacity: index === currentIndex ? 1 : 0.6,\n            }}\n            onMouseEnter={() => setCurrentIndex(index)}\n            onClick={() => setCurrentIndex(index)}\n            key={item.name}\n          >\n            <TextBlock {...item} />\n          </Box>\n        ))}\n      </Flex>\n\n      {children}\n    </Container>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { Flex, H2, Span } from '../../../base';\n\nexport interface TitleProps {\n  children?: ReactNode;\n  subtitle: string;\n  title: string;\n  description: string;\n}\n\nexport const Title: FC<TitleProps> = (props) => {\n  const { children, subtitle, description, title } = props;\n  const theme = useTheme();\n\n  return (\n    <Flex xs={{ justifyContent: 'center' }}>\n      <Flex\n        xs={{\n          textAlign: 'center',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: 10,\n        }}\n        m={{ gap: 24 }}\n      >\n        <Span\n          css={{\n            color: theme.colors.test300,\n            textTransform: 'uppercase',\n          }}\n          xs={theme.text.medium400}\n          m={theme.text.medium600}\n        >\n          {subtitle}\n        </Span>\n\n        <H2\n          css={{ color: theme.colors.white }}\n          xs={theme.text.medium600}\n          m={{ ...theme.text.medium800, maxWidth: 640 }}\n          xl={{ ...theme.text.medium900, maxWidth: 800 }}\n          xxl={{ ...theme.text.medium1000, maxWidth: 820 }}\n        >\n          {title}\n        </H2>\n\n        <Span\n          css={{ color: theme.colors.test300 }}\n          xs={theme.text.normal300}\n          m={{ maxWidth: 640 }}\n          xl={{ ...theme.text.normal400, maxWidth: 850 }}\n        >\n          {description}\n        </Span>\n        {children}\n      </Flex>\n    </Flex>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { Box, Container, OnlyDisplay, Section } from '../../../base';\n\nimport { DesktopLayout } from './DesktopLayout';\nimport { MobileLayout } from './MobileLayout';\nimport { TabletLayout } from './TabletLayout';\nimport { Title } from './Title';\nimport { useFeatureSectionData } from './useFeatureSectionData';\n\nexport interface FeatureSectionProps {\n  children?: ReactNode;\n}\n\nexport const FeatureSection: FC<FeatureSectionProps> = (props) => {\n  const { children } = props;\n  const theme = useTheme();\n  const featureSectionData = useFeatureSectionData();\n\n  return (\n    <Section\n      xs={{\n        backgroundColor: theme.colors.test500,\n        color: theme.colors.white,\n        paddingTop: 56,\n        paddingBottom: 72,\n      }}\n      l={{\n        paddingTop: 120,\n        paddingBottom: 120,\n      }}\n    >\n      <Container>\n        <Title {...featureSectionData} />\n      </Container>\n\n      {/* mobile */}\n      <OnlyDisplay xs s>\n        <MobileLayout />\n      </OnlyDisplay>\n\n      {/* tablet */}\n      <OnlyDisplay m>\n        <TabletLayout />\n      </OnlyDisplay>\n\n      {/* desktop */}\n      <OnlyDisplay l xl xxl>\n        <DesktopLayout />\n      </OnlyDisplay>\n\n      <Box>{children}</Box>\n    </Section>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nimport { isBrowser } from '../../../../utils';\nimport { Box, Container, Flex, I18n, Span } from '../../../base';\nimport { BackgroundMask } from '../../../common';\n\nexport interface HeroProps {\n  children?: ReactNode;\n}\n\nexport const Hero: FC<HeroProps> = (props) => {\n  const { children } = props;\n  const theme = useTheme();\n\n  return (\n    <Box\n      xs={{\n        height: '100vh',\n        position: 'relative',\n        backgroundColor: theme.colors.test100,\n        borderBottomLeftRadius: 40,\n        borderBottomRightRadius: 40,\n        overflow: 'hidden',\n      }}\n      l={{ borderRadius: 0 }}\n    >\n      <Box\n        xs={{\n          width: '100%',\n          height: '100vh',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n        }}\n        l={{ width: '50%' }}\n      >\n        {isBrowser() && (\n          <StaticImage\n            css={{\n              width: '100%',\n              height: '100%',\n            }}\n            src=\"./images/hero.jpg\"\n            alt=\"background\"\n          />\n        )}\n\n        <BackgroundMask />\n      </Box>\n\n      <Container>\n        <Flex\n          xs={{\n            paddingTop: 56,\n            paddingBottom: 56,\n            position: 'relative',\n            zIndex: 1,\n            height: '100vh',\n            flexDirection: 'column',\n            justifyContent: 'flex-end',\n            gap: 20,\n          }}\n          l={{\n            justifyContent: 'center',\n          }}\n        >\n          <Span\n            xs={theme.text.medium800}\n            xl={theme.text.medium900}\n            xxl={theme.text.medium1000}\n          >\n            <I18n name=\"title__security_both_hard_and_soft\" alwaysMultiLine />\n          </Span>\n\n          <Span xxl={theme.text.medium300}>\n            <I18n name=\"title__security_both_hard_and_soft_desc\" />\n          </Span>\n        </Flex>\n      </Container>\n      {children}\n    </Box>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport {\n  Box,\n  Container,\n  Divider,\n  Flex,\n  H2,\n  H3,\n  P,\n  Section,\n  Span,\n} from '../../../base';\n\nimport { useTextDescriptionSectionData } from './useTextDescriptionSectionData';\n\nexport interface TextDescriptionSectionProps {\n  children?: ReactNode;\n}\n\nexport const TextDescriptionSection: FC<TextDescriptionSectionProps> = (\n  props,\n) => {\n  const { children } = props;\n  const textDescriptionSectionData = useTextDescriptionSectionData();\n  const theme = useTheme();\n\n  return (\n    <Section\n      xs={{ paddingTop: 72, paddingBottom: 72 }}\n      xl={{ paddingTop: 120, paddingBottom: 120 }}\n    >\n      <Container>\n        <Flex\n          xs={{ gap: 32, flexDirection: 'column', alignItems: 'center' }}\n          m={{ gap: 36 }}\n          xl={{ gap: 80 }}\n        >\n          <Box\n            xs={{ textAlign: 'center', maxWidth: 760 }}\n            m={{ maxWidth: 660 }}\n            xl={{ maxWidth: 760 }}\n          >\n            <H2\n              xs={theme.text.medium700}\n              m={theme.text.medium800}\n              xl={theme.text.medium900}\n            >\n              {textDescriptionSectionData.title}\n            </H2>\n            <Box xs={{ paddingTop: 8 }}>\n              <Span xs={theme.text.normal200} xl={theme.text.normal500}>\n                {textDescriptionSectionData.description}\n              </Span>\n            </Box>\n          </Box>\n\n          <Flex\n            xs={{ gap: 36, flexDirection: 'column' }}\n            m={{ gap: 24, flexDirection: 'row' }}\n            xl={{ gap: 80 }}\n            xxl={{ gap: 90 }}\n          >\n            {textDescriptionSectionData.items.map((item, index) => (\n              <Flex\n                key={item.name}\n                xs={{ gap: 16, flexDirection: 'column', flex: 1 }}\n              >\n                <Span\n                  css={{ color: theme.colors.test300 }}\n                  xs={theme.text.medium500}\n                >\n                  {`0${index}`}\n                </Span>\n                <Divider color={theme.colors.test300} />\n                <H3\n                  xs={theme.text.medium500}\n                  m={theme.text.medium600}\n                  xl={theme.text.medium700}\n                >\n                  {item.name}\n                </H3>\n                <P xs={theme.text.normal300}>{item.description}</P>\n              </Flex>\n            ))}\n          </Flex>\n        </Flex>\n      </Container>\n      {children}\n    </Section>\n  );\n};\n","import { useTranslation } from 'gatsby-plugin-react-i18next';\n\nexport function useTextDescriptionSectionData() {\n  const { t } = useTranslation();\n\n  return {\n    title: t('title__earn_the_trust_of_top_and_professional_institutions'),\n    description: t(\n      'title__earn_the_trust_of_top_and_professional_institutions_desc',\n    ),\n\n    items: [\n      {\n        name: t('title__ce_and_rohs_certification'),\n        description: t('title__ce_and_rohs_certification_desc'),\n      },\n      {\n        name: t('title__ultrasonic_welding_process'),\n        description: t('title__ultrasonic_welding_process_desc'),\n      },\n      {\n        name: t('title__eal6_certification'),\n        description: t('title__eal6_certification_desc'),\n      },\n    ],\n  };\n}\n","import React, { ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\nimport { Helmet } from 'react-helmet';\n\nimport { Box, Container, Main, SEO } from '../../base';\nimport { Navigation, PageFooter, StayInTouch } from '../../common';\n\nimport { FeatureSection } from './FeatureSection';\nimport { Hero } from './Hero';\nimport { TextDescriptionSection } from './TextDescriptionSection';\n\nexport interface SecurityProps {\n  children?: ReactNode;\n}\n\nexport const Security: React.FC<SecurityProps> = (props) => {\n  const { children } = props;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Helmet>\n        <title>OneKey</title>\n      </Helmet>\n\n      <SEO title=\"onekey\" />\n\n      <Navigation />\n\n      <Main>\n        <Box xs={{ backgroundColor: theme.colors.test500 }}>\n          <Hero />\n        </Box>\n\n        <FeatureSection />\n\n        <Container>\n          <TextDescriptionSection />\n\n          <Box xs={{ paddingBottom: 80 }}>\n            <StayInTouch />\n          </Box>\n        </Container>\n      </Main>\n\n      <PageFooter isShowEmailSubscribe={false} isShowMediaLinks={false} />\n      {children}\n    </>\n  );\n};\n"],"names":["ImageSwitcher","props","featureSectionDataItems","active","children","___EmotionJSX","Box","xs","position","maxWidth","map","item","index","key","name","opacity","willChange","transition","top","imageNode","TextBlock","description","button","theme","useTheme","Flex","gap","flexDirection","Span","text","medium600","l","medium700","xl","medium800","P","normal200","normal300","width","Link","to","link","Button","themeColor","variant","useFeatureSectionData","t","useTranslation","subtitle","title","items","StaticImage","src","alt","Progress","height","backgroundColor","background","colors","white","xxl","DesktopLayout","featureSectionData","useWindowSize","windowHeight","useElementInViewportProgress","ref","elementInViewportProgress","motionValue","useTransform","currentIndex","value","parseInt","toFixed","stickyPosition","Container","justifyContent","paddingTop","get","css","overflow","padding","MobileLayout","useState","blockSwiper","setBlockSwiper","progress","setProgress","useBoundingClientRect","rect","progressContainerWidth","setCurrentIndex","useInterval","Math","abs","FreeSwiper","onSwiper","spaceBetween","style","paddingLeft","paddingRight","SwiperSlide","TabletLayout","marginLeft","marginRight","flex","onMouseEnter","onClick","Title","textAlign","alignItems","m","color","test300","textTransform","medium400","H2","medium900","medium1000","normal400","FeatureSection","Section","test500","paddingBottom","OnlyDisplay","s","Hero","test100","borderBottomLeftRadius","borderBottomRightRadius","borderRadius","right","isBrowser","BackgroundMask","zIndex","I18n","alwaysMultiLine","medium300","TextDescriptionSection","textDescriptionSectionData","normal500","medium500","Divider","H3","Security","Helmet","SEO","Navigation","Main","StayInTouch","PageFooter","isShowEmailSubscribe","isShowMediaLinks"],"sourceRoot":""}