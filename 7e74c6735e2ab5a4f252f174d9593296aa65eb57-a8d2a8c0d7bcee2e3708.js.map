{"version":3,"file":"7e74c6735e2ab5a4f252f174d9593296aa65eb57-a8d2a8c0d7bcee2e3708.js","mappings":"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","sources":["webpack://portal/./src/components/pages/products/components/FullscreenScrollAnimation/Player.tsx","webpack://portal/./src/components/pages/products/components/FullscreenScrollAnimation/FullscreenScrollAnimation.tsx","webpack://portal/./src/components/pages/products/components/MultiChainSupportSection/MultiChainSupportSection.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/ContentColumn.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/ContentItem.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/ContentItemDescription.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/ContentItemDescriptions.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/ContentItemTitle.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/ContentItemTitle2.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/DynamicContent.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/Content.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/SideImage.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/TechnicalSpecificationsSection.tsx"],"sourcesContent":["import { FC, useState } from 'react';\n\nimport {\n  AnimatePresence,\n  MotionValue,\n  motion,\n  useTransform,\n} from 'framer-motion';\n\nimport { useWindowSize } from '../../../../../hooks';\nimport { Box, CanvasPlayerNext } from '../../../../base';\nimport { ProgressStateItem } from '../../../../base/CanvasPlayerNext/Player';\nimport { IntroductionText } from '../IntroductionSection/IntroductionText';\n\nexport interface PlayerProps {\n  elementInViewportProgress: MotionValue<number>;\n  backgroundColor: string;\n  items: {\n    name: string | string[];\n    description: string;\n    textColor?: string;\n    frames: string[];\n  }[];\n}\n\nexport const Player: FC<PlayerProps> = (props) => {\n  const { elementInViewportProgress, items, backgroundColor } = props;\n  const { height: windowHeight = 1, width: windowWidth = 1 } = useWindowSize();\n  const [totalProgress, setTotalProgress] = useState(0);\n  const [currentPlayerState, setCurrentPlayerState] =\n    useState<ProgressStateItem | null>(null);\n\n  const allFrames = items.map((item) => item.frames);\n\n  const motionValue = useTransform(\n    elementInViewportProgress,\n    [0, 1],\n    [0, totalProgress],\n  );\n\n  const currentProgress = parseInt(motionValue.get().toFixed(0));\n\n  return (\n    <Box xs={{ position: 'relative' }}>\n      <CanvasPlayerNext\n        backgroundColor={backgroundColor}\n        width={windowWidth}\n        height={windowHeight}\n        frames={allFrames}\n        progress={currentProgress}\n        onTotalProgressChange={(progress, currentState) => {\n          setTotalProgress(progress);\n          setCurrentPlayerState(currentState);\n        }}\n      />\n\n      <Box\n        xs={{\n          position: 'absolute',\n          padding: 12,\n          left: 24,\n          bottom: 24,\n        }}\n        m={{\n          left: '3vw',\n          bottom: '3vw',\n        }}\n      >\n        <AnimatePresence exitBeforeEnter>\n          {items.map((item) => {\n            let is = false;\n\n            if (currentPlayerState?.type === 'fade') {\n              is = false;\n            } else if (currentPlayerState?.frames) {\n              const isCurrentState = currentPlayerState.frames.some((frame) =>\n                item.frames.includes(frame),\n              );\n\n              is =\n                isCurrentState &&\n                currentProgress > currentPlayerState.progressStart + 5 &&\n                currentProgress < currentPlayerState.progressEnd - 5;\n            }\n\n            return (\n              is && (\n                <motion.div\n                  key={item.description}\n                  animate={{ opacity: 1, y: 0 }}\n                  initial={{ opacity: 0, y: 12 }}\n                  exit={{ opacity: 0, y: -12 }}\n                  transition={{ duration: 0.3 }}\n                >\n                  <IntroductionText\n                    color={item.textColor as 'black' | 'difference'}\n                    name={item.name}\n                    description={item.description}\n                  />\n                </motion.div>\n              )\n            );\n          })}\n        </AnimatePresence>\n      </Box>\n    </Box>\n  );\n};\n","import { FC, ReactNode, useRef } from 'react';\n\nimport { motion, useScroll } from 'framer-motion';\n\nimport { usePositionAnimation } from '../../../../../hooks';\nimport { mergeRefs } from '../../../../../utils';\nimport { Box } from '../../../../base';\n\nimport { Player, PlayerProps } from './Player';\n\nexport interface FullscreenScrollAnimationProps {\n  children?: ReactNode;\n  backgroundColor: string;\n  items: PlayerProps['items'];\n}\n\nexport const FullscreenScrollAnimation: FC<FullscreenScrollAnimationProps> = (\n  props,\n) => {\n  const { children, items, backgroundColor } = props;\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { scrollYProgress: elementInViewportProgress } = useScroll({\n    target: ref,\n  });\n\n  const { ref: paddingRef, motionValue: paddingMotionValue } =\n    usePositionAnimation({\n      from: 60,\n      to: 0,\n    });\n  const { ref: borderRadiusRef, motionValue: borderRadiusMotionValue } =\n    usePositionAnimation({\n      from: 40,\n      to: 0,\n    });\n\n  const containerRef = mergeRefs(borderRadiusRef, paddingRef);\n  const allImages = items.reduce(\n    (acc: string[], item) => acc.concat(item.frames),\n    [],\n  );\n\n  return (\n    <div ref={ref}>\n      <Box\n        css={{\n          height: `${allImages.length * 5}vh`,\n          position: 'relative',\n          zIndex: 9999,\n        }}\n      >\n        <Box\n          css={{\n            top: 0,\n            position: 'sticky',\n          }}\n        >\n          <Box\n            xs={{\n              width: '100%',\n              height: '100vh',\n              overflow: 'hidden',\n              '& canvas': {\n                background: backgroundColor,\n                display: 'block',\n              },\n            }}\n          >\n            <motion.div\n              ref={containerRef}\n              style={{\n                paddingLeft: paddingMotionValue,\n                paddingRight: paddingMotionValue,\n              }}\n            >\n              <motion.div\n                style={{\n                  overflow: 'hidden',\n                  transform: `translate3d(0,0,0)`,\n                  borderRadius: borderRadiusMotionValue,\n                }}\n              >\n                <Player\n                  backgroundColor={backgroundColor}\n                  items={items}\n                  elementInViewportProgress={elementInViewportProgress}\n                />\n              </motion.div>\n            </motion.div>\n          </Box>\n        </Box>\n      </Box>\n      {children}\n    </div>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport {\n  Box,\n  Button,\n  Container,\n  Flex,\n  Link,\n  Section,\n  Span,\n} from '../../../../base';\nimport { useMultiChainSupportMedia } from '../../../../common';\n\nexport interface MultiChainSupportSectionProps {\n  children?: ReactNode;\n}\n\nexport const MultiChainSupportSection: FC<MultiChainSupportSectionProps> = (\n  props,\n) => {\n  const { children } = props;\n  const MultiChainSupportMediaCardData = useMultiChainSupportMedia();\n  const { mainTitle, button, link, imageNode, description } =\n    MultiChainSupportMediaCardData;\n  const theme = useTheme();\n\n  return (\n    <Section>\n      <Container>\n        <Box\n          xs={{ paddingTop: 72, paddingBottom: 72 }}\n          m={{ paddingTop: 100, paddingBottom: 100 }}\n          l={{ paddingTop: 120, paddingBottom: 120 }}\n        >\n          <Box\n            xs={{\n              borderRadius: 40,\n              position: 'relative',\n              backgroundColor: theme.colors.test100,\n              padding: '48px 36px',\n            }}\n            m={{\n              padding: 0,\n            }}\n          >\n            <Flex\n              xs={{\n                gap: 20,\n                flexDirection: 'column',\n              }}\n              m={{\n                gap: 0,\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Flex\n                xs={{\n                  gap: 20,\n                  flexDirection: 'column',\n                }}\n                m={{\n                  gap: 24,\n                  paddingLeft: 72,\n                  paddingTop: 72,\n                }}\n              >\n                <Span\n                  xs={{\n                    color: theme.colors.test500,\n                    ...theme.text.medium700,\n                  }}\n                  m={theme.text.medium800}\n                >\n                  {mainTitle}\n                </Span>\n                <Span\n                  xs={{\n                    color: theme.colors.test400,\n                    ...theme.text.normal200,\n                  }}\n                  m={theme.text.normal300}\n                >\n                  {description}\n                </Span>\n\n                <Box>\n                  <Link to={link}>\n                    <Button variant=\"outlined\">{button}</Button>\n                  </Link>\n                </Box>\n              </Flex>\n              <Box\n                xs={{\n                  maxWidth: 420,\n                  marginLeft: 'auto',\n                  marginRight: 'auto',\n                }}\n                m={{\n                  marginRight: 0,\n                }}\n              >\n                {imageNode}\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        {children}\n      </Container>\n    </Section>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { Flex } from '../../../../../base/Flex';\n\nexport interface ContentColumnProps {\n  children?: ReactNode;\n}\n\nexport const ContentColumn: FC<ContentColumnProps> = (props) => {\n  const { children } = props;\n\n  return (\n    <Flex xs={{ flexDirection: 'column', gap: 64, flex: 1 }}>{children}</Flex>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { Flex } from '../../../../../base';\n\nexport interface ContentItemProps {\n  children?: ReactNode;\n}\n\nexport const ContentItem: FC<ContentItemProps> = (props) => {\n  const { children } = props;\n\n  return <Flex xs={{ flexDirection: 'column', gap: 16 }}>{children}</Flex>;\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { Span } from '../../../../../base';\n\nexport interface ContentItemDescriptionProps {\n  children?: ReactNode;\n}\n\nexport const ContentItemDescription: FC<ContentItemDescriptionProps> = (\n  props,\n) => {\n  const { children } = props;\n  const theme = useTheme();\n  const n2 = { ...theme.text.normal200, opacity: 0.5 };\n\n  return <Span xs={n2}>{children}</Span>;\n};\n","import { FC, ReactNode } from 'react';\n\nimport { Flex } from '../../../../../base';\n\nexport interface ContentItemDescriptionsProps {\n  children?: ReactNode;\n}\n\nexport const ContentItemDescriptions: FC<ContentItemDescriptionsProps> = (\n  props,\n) => {\n  const { children } = props;\n\n  return (\n    <Flex\n      xs={{\n        flexDirection: 'column',\n      }}\n    >\n      {children}\n    </Flex>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { H2 } from '../../../../../base';\n\nexport interface ContentItemTitleProps {\n  children?: ReactNode;\n}\n\nexport const ContentItemTitle: FC<ContentItemTitleProps> = (props) => {\n  const { children } = props;\n  const theme = useTheme();\n\n  return <H2 xs={theme.text.medium600}>{children}</H2>;\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { H2 } from '../../../../../base';\n\nexport interface ContentItemTitle2Props {\n  children?: ReactNode;\n}\n\nexport const ContentItemTitle2: FC<ContentItemTitle2Props> = (props) => {\n  const { children } = props;\n  const theme = useTheme();\n  const m3 = { ...theme.text.medium300, opacity: 0.5 };\n\n  if (!children) {\n    return null;\n  }\n\n  return <H2 xs={m3}>{children}</H2>;\n};\n","import { FC, ReactNode } from 'react';\n\nimport { Box } from '../../../../../base';\n\nimport { ContentColumn } from './ContentColumn';\nimport { ContentItem } from './ContentItem';\nimport { ContentItemDescription } from './ContentItemDescription';\nimport { ContentItemDescriptions } from './ContentItemDescriptions';\nimport { ContentItemTitle } from './ContentItemTitle';\nimport { ContentItemTitle2 } from './ContentItemTitle2';\n\nexport type DynamicContentItems = {\n  title: string;\n  content: {\n    title2?: string;\n    description?: string;\n    descriptions?: string[];\n  }[];\n}[];\n\nexport interface DynamicContentProps {\n  children?: ReactNode;\n  items: DynamicContentItems;\n}\n\nexport const DynamicContent: FC<DynamicContentProps> = (props) => {\n  const { children, items = [] } = props;\n\n  if (items.length === 0) {\n    return null;\n  }\n\n  return (\n    <ContentColumn>\n      {items.map((item) => (\n        <ContentItem key={item.title}>\n          <ContentItemTitle>{item.title}</ContentItemTitle>\n\n          {item.content.map((item2) => (\n            <Box key={JSON.stringify(item2)}>\n              <ContentItemTitle2>{item2.title2}</ContentItemTitle2>\n\n              {item2.description && (\n                <ContentItemDescription>\n                  {item2.description}\n                </ContentItemDescription>\n              )}\n\n              {item2.descriptions && (\n                <ContentItemDescriptions>\n                  {item2.descriptions.map((description) => (\n                    <ContentItemDescription key={description}>\n                      {description}\n                    </ContentItemDescription>\n                  ))}\n                </ContentItemDescriptions>\n              )}\n            </Box>\n          ))}\n        </ContentItem>\n      ))}\n\n      {children}\n    </ContentColumn>\n  );\n};\n","import { FC } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { Flex } from '../../../../../base';\n\nimport { DynamicContent, DynamicContentItems } from './DynamicContent';\n\nexport interface ContentProps {\n  content: {\n    left: DynamicContentItems;\n    right: DynamicContentItems;\n  };\n}\n\nexport const Content: FC<ContentProps> = (props) => {\n  const { content } = props;\n  const theme = useTheme();\n\n  return (\n    <Flex\n      xs={{\n        justifyContent: 'center',\n        flexDirection: 'column',\n        color: theme.colors.white,\n        gap: 64,\n      }}\n      s={{\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        width: '60vw',\n      }}\n      m={{ width: 'auto', paddingTop: 36, flexDirection: 'row' }}\n      l={{ gap: 100 }}\n      xl={{ gap: 120 }}\n    >\n      <DynamicContent items={content.left} />\n      <DynamicContent items={content.right} />\n    </Flex>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { Box } from '../../../../base';\n\nexport interface SideImageProps {\n  children?: ReactNode;\n  smallImageUrl: string;\n  mediumImageUrl: string;\n  largeImageUrl: string;\n}\n\nexport const SideImage: FC<SideImageProps> = (props) => {\n  const { children, smallImageUrl, mediumImageUrl, largeImageUrl } = props;\n\n  return (\n    <Box\n      css={{\n        display: 'block',\n        backgroundSize: 'contain',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n      }}\n      xs={{\n        backgroundImage: `url(${smallImageUrl})`,\n        width: '100%',\n        height: 589,\n      }}\n      m={{\n        backgroundImage: `url(${mediumImageUrl})`,\n        width: 436,\n        height: 589,\n      }}\n      l={{\n        backgroundImage: `url(${largeImageUrl})`,\n        width: 533,\n        height: 680,\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { Box, Container, Flex } from '../../../../base';\nimport { SectionTitle } from '../../../../common';\n\nimport { Content, ContentProps } from './Content';\nimport { SideImage } from './SideImage';\n\nexport interface TechnicalSpecificationsSectionProps extends ContentProps {\n  children?: ReactNode;\n  title: string;\n  images: {\n    largeImageUrl: string;\n    mediumImageUrl: string;\n    smallImageUrl: string;\n  };\n}\n\nexport const TechnicalSpecificationsSection: FC<\n  TechnicalSpecificationsSectionProps\n> = (props) => {\n  const { children, title, images, content } = props;\n  const theme = useTheme();\n\n  return (\n    <Box\n      xs={{\n        backgroundColor: theme.colors.test400,\n        borderRadius: 40,\n        paddingTop: 70,\n        paddingBottom: 70,\n      }}\n      m={{\n        padding: 70,\n        borderRadius: 0,\n      }}\n    >\n      <Container>\n        <Box xs={{ textAlign: 'center' }}>\n          <SectionTitle color={theme.colors.white}>{title}</SectionTitle>\n        </Box>\n\n        <Flex\n          xs={{ flexDirection: 'column', paddingTop: 40, gap: 40 }}\n          m={{ justifyContent: 'center' }}\n          l={{ flexDirection: 'row' }}\n        >\n          <Flex xs={{ flex: 1, justifyContent: 'center' }}>\n            <SideImage {...images} />\n          </Flex>\n\n          <Content content={content} />\n        </Flex>\n      </Container>\n      {children}\n    </Box>\n  );\n};\n"],"names":["Player","props","elementInViewportProgress","items","backgroundColor","useWindowSize","height","windowHeight","width","windowWidth","useState","totalProgress","setTotalProgress","currentPlayerState","setCurrentPlayerState","allFrames","map","item","frames","motionValue","useTransform","currentProgress","parseInt","get","toFixed","___EmotionJSX","Box","xs","position","CanvasPlayerNext","progress","onTotalProgressChange","currentState","padding","left","bottom","m","AnimatePresence","exitBeforeEnter","is","type","some","frame","includes","progressStart","progressEnd","motion","key","description","animate","opacity","y","initial","exit","transition","duration","IntroductionText","color","textColor","name","FullscreenScrollAnimation","children","ref","useRef","useScroll","target","scrollYProgress","usePositionAnimation","from","to","paddingRef","paddingMotionValue","borderRadiusRef","borderRadiusMotionValue","containerRef","mergeRefs","allImages","reduce","acc","concat","css","length","zIndex","overflow","background","display","style","paddingLeft","paddingRight","transform","borderRadius","MultiChainSupportSection","MultiChainSupportMediaCardData","useMultiChainSupportMedia","mainTitle","button","link","imageNode","theme","useTheme","Section","Container","paddingTop","paddingBottom","l","colors","test100","Flex","gap","flexDirection","alignItems","justifyContent","Span","test500","text","medium700","medium800","test400","normal200","normal300","Link","Button","variant","maxWidth","marginLeft","marginRight","ContentColumn","flex","ContentItem","ContentItemDescription","n2","ContentItemDescriptions","ContentItemTitle","H2","medium600","ContentItemTitle2","m3","medium300","DynamicContent","title","content","item2","JSON","stringify","title2","descriptions","Content","white","s","xl","right","SideImage","smallImageUrl","mediumImageUrl","largeImageUrl","backgroundImage","TechnicalSpecificationsSection","images","textAlign","SectionTitle"],"sourceRoot":""}